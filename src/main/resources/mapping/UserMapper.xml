<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dbsi.dao.UserMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dbsi.model.User" >
    <id column="userid" property="userid" jdbcType="INTEGER" />
    <result column="dbconnid" property="dbconnid" jdbcType="INTEGER" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="realname" property="realname" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="TINYINT" />
    <result column="position" property="position" jdbcType="VARCHAR" />
    <result column="power" property="power" jdbcType="VARCHAR" />
    <result column="phonenumber" property="phonenumber" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="is_exist" property="isExist" jdbcType="TINYINT" />
    <result column="icon" property="icon" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List">
    userid, dbconnid, username, password, realname, sex, position, power, phonenumber, address,
    description, is_exist, icon
  </sql>
  <!-- 简单的查询时可以不写明映射，,MyBatis 会在幕后自动创建一个 ResultMap,基于属性名来映射列到 JavaBean 的属性上-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select
    <include refid="Base_Column_List" />
    from user
    where userid = #{userid,jdbcType=INTEGER}
  </select>
  <select id="selectByPasswordAndUsername" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from user
    where username=#{username} and password=#{password}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user
    where userid = #{userid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.dbsi.model.User" >
    insert into user (userid, username, password,
    realname, sex, position,
    power, phonenumber, address,
    description, is_exist, icon
    )
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR},
    #{realname,jdbcType=VARCHAR}, #{sex,jdbcType=TINYINT}, #{position,jdbcType=VARCHAR},
    #{power,jdbcType=VARCHAR}, #{phonenumber,jdbcType=VARCHAR}, #{address,jdbcType=VARCHAR},
    #{description,jdbcType=VARCHAR}, #{isExist,jdbcType=TINYINT}, #{icon,jdbcType=VARCHAR}
    )
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dbsi.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        userid,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="realname != null" >
        realname,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="position != null" >
        position,
      </if>
      <if test="power != null" >
        power,
      </if>
      <if test="phonenumber != null" >
        phonenumber,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="isExist != null" >
        is_exist,
      </if>
      <if test="icon != null" >
        icon,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userid != null" >
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="position != null" >
        #{position,jdbcType=VARCHAR},
      </if>
      <if test="power != null" >
        #{power,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="isExist != null" >
        #{isExist,jdbcType=TINYINT},
      </if>
      <if test="icon != null" >
        #{icon,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dbsi.model.User" >
    update user
    <set >
      <if test="username != null" >
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="realname != null" >
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="position != null" >
        position = #{position,jdbcType=VARCHAR},
      </if>
      <if test="power != null" >
        power = #{power,jdbcType=VARCHAR},
      </if>
      <if test="phonenumber != null" >
        phonenumber = #{phonenumber,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="isExist != null" >
        is_exist = #{isExist,jdbcType=TINYINT},
      </if>
      <if test="icon != null" >
        icon = #{icon,jdbcType=VARCHAR},
      </if>
    </set>
    where userid = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dbsi.model.User" >
    update user
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      realname = #{realname,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      position = #{position,jdbcType=VARCHAR},
      power = #{power,jdbcType=VARCHAR},
      phonenumber = #{phonenumber,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      is_exist = #{isExist,jdbcType=TINYINT},
      icon = #{icon,jdbcType=VARCHAR}
    where userid = #{userid,jdbcType=INTEGER}
  </update>
</mapper>