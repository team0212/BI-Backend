<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.edu.dbsi.dao.SchemaDimensionMapper" >
  <resultMap id="BaseResultMap" type="cn.edu.dbsi.model.SchemaDimension" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="table_name" property="tableName" jdbcType="VARCHAR" />
    <result column="key" property="key" jdbcType="VARCHAR" />
    <result column="schema_id" property="schemaId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, name, schema_dimension.table_name, schema_dimension.key, schema_id
  </sql>
  <select id="selectAllDimensionBySchemaId" resultMap="BaseResultMap" parameterType="java.lang.Integer">
  select
  <include refid="Base_Column_List"/>
  from schema_dimension
  WHERE schema_id = #{schemaId,jdbcType=INTEGER}
</select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from schema_dimension
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectSchemaDimensionLastPrimaryKey" resultType="java.lang.Integer">
    select id from schema_dimension order by id DESC limit 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from schema_dimension
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.dbsi.model.SchemaDimension" >
    insert into schema_dimension (id, name, schema_dimension.table_name,
      schema_dimension.key, schema_id)
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{tableName,jdbcType=VARCHAR}, 
      #{key,jdbcType=VARCHAR}, #{schemaId,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.dbsi.model.SchemaDimension" >
    insert into schema_dimension
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="tableName != null" >
        schema_dimension.table_name,
      </if>
      <if test="key != null" >
        schema_dimension.key,
      </if>
      <if test="schemaId != null" >
        schema_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null" >
        #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="key != null" >
        #{key,jdbcType=VARCHAR},
      </if>
      <if test="schemaId != null" >
        #{schemaId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.dbsi.model.SchemaDimension" >
    update schema_dimension
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tableName != null" >
        schema_dimension.table_name = #{tableName,jdbcType=VARCHAR},
      </if>
      <if test="key != null" >
        schema_dimension.key = #{key,jdbcType=VARCHAR},
      </if>
      <if test="schemaId != null" >
        schema_id = #{schemaId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.dbsi.model.SchemaDimension" >
    update schema_dimension
    set name = #{name,jdbcType=VARCHAR},
      schema_dimension.table_name = #{tableName,jdbcType=VARCHAR},
      schema_dimension.key = #{key,jdbcType=VARCHAR},
      schema_id = #{schemaId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>